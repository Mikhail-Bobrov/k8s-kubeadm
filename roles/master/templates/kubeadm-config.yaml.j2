apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  ttl: 24h0m0s
localAPIEndpoint:
  advertiseAddress: {{ hostvars[groups['k8s_masters'][0]].ansible_facts.default_ipv4.address }}
  bindPort: 6443
nodeRegistration:
  criSocket: {{ cri_socket }}
  imagePullPolicy: IfNotPresent
  name: {{ master_node_name }}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
certificatesDir: /etc/kubernetes/pki
clusterName: cluster.local
controllerManager: {}
dns: {}
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: "registry.k8s.io"
apiServer:
  certSANs:
{% for host in groups['k8s_masters'] %}
  - "{{ hostvars[host].ansible_host }}"
  - "{{ host }}"
{% endfor %}
  - "{{ cluster_virtual_ip }}"
  timeoutForControlPlane: 4m0s
  extraArgs:
    authorization-mode: Node,RBAC
    bind-address: 0.0.0.0
    service-node-port-range: 30000-32767
kubernetesVersion: {{ kubernetes_version }}
controlPlaneEndpoint: {{ cluster_virtual_ip }}:{{ cluster_virtual_port }}
networking:
  dnsDomain: cluster.local
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
scheduler: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: {{ kubernetes_pod_subnet }}
ipvs:
  strictARP: True
mode: ipvs
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
systemReserved:
  memory: {{ kubelet_config_systemReserved_memory }}
  cpu: {{ kubelet_config_systemReserved_cpu }}
  ephemeral-storage: {{ kubelet_config_systemReserved_ephemeral }}
containerLogMaxSize: {{ kubelet_config_LogMaxSize }}
containerLogMaxFiles: {{ kubelet_config_LogMaxFiles }}
